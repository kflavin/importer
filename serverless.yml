service: importer

frameworkVersion: ">=1.9.0 <2.0.0"

plugins:
  - serverless-python-requirements
  - serverless-plugin-scripts
  - serverless-plugin-git-variables

custom:
  gitDescription: ${git:branch}:${git:sha1}
  environment: ${opt:stage, self:provider.stage}
  pythonRequirements:
    dockerizePip: false
    slim: true
  scripts:
    hooks:
      #'before:package:initialize': bumpversion patch
      'deploy:finalize': bash bin/stage_all_files.sh ${self:custom.environment}
  exportGitVariables: false
  schedule:
    products: ${file(./serverless/products/schedule.yml)}
    npi: ${file(./serverless/npi/schedule.yml)}
    mysql_backup: ${file(./serverless/mysql_backup/schedule.yml)}

provider:
  name: aws
  description: Lambda functions for loading data
  stackTags:
    gitDescription: ${self:custom.gitDescription}
  runtime: python3.6
  timeout: 30
  environment:
    environment: ${self:custom.environment}
    aws_key: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_key}
    aws_region: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_region}
    aws_image_id: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_image_id}
    aws_security_groups: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_security_groups}
    aws_vpc_id: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_vpc_id}
    aws_subnets: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_subnets}
    aws_sns_topic_arn: ${file(./serverless/serverless.env.yml):${self:custom.environment}.aws_sns_topic_arn}
    aws_instance_profile: {Ref: Ec2InstanceProfile}
    aws_s3_bucket: {Ref: ScriptBucket}
    aws_db_backup_s3_bucket: {Ref: DbBackupBucket}
    terminate_on_completion: "true"
  iamRoleStatements: ${file(resources/iam.yml)}

# The Lambda functions.
# NPI has separate download/load functions.
# Products uses the RxNorm dataset.
functions:
  npi_loader: ${file(serverless/npi/loader.yml)}
  npi_downloader: ${file(serverless/npi/downloader.yml)}
  products: ${file(serverless/products/loader.yml)}
  mysql_backup: ${file(serverless/mysql_backup/loader.yml)}

resources:
  Description: Lambda functions for loading data
  Outputs:
    ScriptBucket:
      Value: {Ref: ScriptBucket}
    DbBackupBucket:
      Value: {Ref: DbBackupBucket}
    Ec2Role:
      Value: {Ref: Ec2Role}
    Ec2InstanceProfile:
      Value: {Ref: Ec2InstanceProfile}
  Resources:
    ScriptBucket: ${file(resources/s3_npi_bucket.yml)}
    DbBackupBucket: ${file(resources/s3_mysql_bucket.yml)}
    Ec2Role: ${file(resources/ec2-role.yml)}
    Ec2InstanceProfile: ${file(resources/ec2-instance_profile.yml)}

package:
  exclude:
    - ./**
    - '!importer/**'
    - '!node_modules/**'
  include:
    - lambdas/**

